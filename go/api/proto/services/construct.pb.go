// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: services/construct.proto

package services

import (
	proto "github.com/ubtr/ubt/go/api/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId *proto.ChainId        `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	From    string                `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To      string                `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Amount  *proto.CurrencyAmount `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *CreateTransferRequest) Reset() {
	*x = CreateTransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_construct_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransferRequest) ProtoMessage() {}

func (x *CreateTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_construct_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransferRequest.ProtoReflect.Descriptor instead.
func (*CreateTransferRequest) Descriptor() ([]byte, []int) {
	return file_services_construct_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTransferRequest) GetChainId() *proto.ChainId {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *CreateTransferRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CreateTransferRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *CreateTransferRequest) GetAmount() *proto.CurrencyAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

type TransferReceiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To     string                `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Amount *proto.CurrencyAmount `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TransferReceiver) Reset() {
	*x = TransferReceiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_construct_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferReceiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferReceiver) ProtoMessage() {}

func (x *TransferReceiver) ProtoReflect() protoreflect.Message {
	mi := &file_services_construct_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferReceiver.ProtoReflect.Descriptor instead.
func (*TransferReceiver) Descriptor() ([]byte, []int) {
	return file_services_construct_proto_rawDescGZIP(), []int{1}
}

func (x *TransferReceiver) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransferReceiver) GetAmount() *proto.CurrencyAmount {
	if x != nil {
		return x.Amount
	}
	return nil
}

type CreateBatchTransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string              `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"` //TODO utxo
	To   []*TransferReceiver `protobuf:"bytes,2,rep,name=to,proto3" json:"to,omitempty"`
}

func (x *CreateBatchTransferRequest) Reset() {
	*x = CreateBatchTransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_construct_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBatchTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBatchTransferRequest) ProtoMessage() {}

func (x *CreateBatchTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_construct_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBatchTransferRequest.ProtoReflect.Descriptor instead.
func (*CreateBatchTransferRequest) Descriptor() ([]byte, []int) {
	return file_services_construct_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBatchTransferRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CreateBatchTransferRequest) GetTo() []*TransferReceiver {
	if x != nil {
		return x.To
	}
	return nil
}

type TransactionIntent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            []byte         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PayloadToSign []byte         `protobuf:"bytes,2,opt,name=payload_to_sign,json=payloadToSign,proto3" json:"payload_to_sign,omitempty"` // prepared byte payload to sign
	SignatureType string         `protobuf:"bytes,3,opt,name=signature_type,json=signatureType,proto3" json:"signature_type,omitempty"`   // type of the signature client must use to sign the payload
	EstimatedFee  *proto.Uint256 `protobuf:"bytes,4,opt,name=estimated_fee,json=estimatedFee,proto3" json:"estimated_fee,omitempty"`      // estimated fee for the transaction TODO: drilldown by fee components and their price
	RawData       []byte         `protobuf:"bytes,5,opt,name=raw_data,json=rawData,proto3" json:"raw_data,omitempty"`                     // raw transaction data
}

func (x *TransactionIntent) Reset() {
	*x = TransactionIntent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_construct_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionIntent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionIntent) ProtoMessage() {}

func (x *TransactionIntent) ProtoReflect() protoreflect.Message {
	mi := &file_services_construct_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionIntent.ProtoReflect.Descriptor instead.
func (*TransactionIntent) Descriptor() ([]byte, []int) {
	return file_services_construct_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionIntent) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *TransactionIntent) GetPayloadToSign() []byte {
	if x != nil {
		return x.PayloadToSign
	}
	return nil
}

func (x *TransactionIntent) GetSignatureType() string {
	if x != nil {
		return x.SignatureType
	}
	return ""
}

func (x *TransactionIntent) GetEstimatedFee() *proto.Uint256 {
	if x != nil {
		return x.EstimatedFee
	}
	return nil
}

func (x *TransactionIntent) GetRawData() []byte {
	if x != nil {
		return x.RawData
	}
	return nil
}

type TransactionCombineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId    *proto.ChainId     `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Intent     *TransactionIntent `protobuf:"bytes,2,opt,name=intent,proto3" json:"intent,omitempty"`
	Signatures [][]byte           `protobuf:"bytes,3,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *TransactionCombineRequest) Reset() {
	*x = TransactionCombineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_construct_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionCombineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionCombineRequest) ProtoMessage() {}

func (x *TransactionCombineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_construct_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionCombineRequest.ProtoReflect.Descriptor instead.
func (*TransactionCombineRequest) Descriptor() ([]byte, []int) {
	return file_services_construct_proto_rawDescGZIP(), []int{4}
}

func (x *TransactionCombineRequest) GetChainId() *proto.ChainId {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *TransactionCombineRequest) GetIntent() *TransactionIntent {
	if x != nil {
		return x.Intent
	}
	return nil
}

func (x *TransactionCombineRequest) GetSignatures() [][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type TransactionSignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId    *proto.ChainId     `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Intent     *TransactionIntent `protobuf:"bytes,2,opt,name=intent,proto3" json:"intent,omitempty"`
	PrivateKey []byte             `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
}

func (x *TransactionSignRequest) Reset() {
	*x = TransactionSignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_construct_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionSignRequest) ProtoMessage() {}

func (x *TransactionSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_construct_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionSignRequest.ProtoReflect.Descriptor instead.
func (*TransactionSignRequest) Descriptor() ([]byte, []int) {
	return file_services_construct_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionSignRequest) GetChainId() *proto.ChainId {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *TransactionSignRequest) GetIntent() *TransactionIntent {
	if x != nil {
		return x.Intent
	}
	return nil
}

func (x *TransactionSignRequest) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

type TransactionSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId    *proto.ChainId     `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Intent     *TransactionIntent `protobuf:"bytes,2,opt,name=intent,proto3" json:"intent,omitempty"`
	Signatures [][]byte           `protobuf:"bytes,3,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *TransactionSendRequest) Reset() {
	*x = TransactionSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_construct_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionSendRequest) ProtoMessage() {}

func (x *TransactionSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_construct_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionSendRequest.ProtoReflect.Descriptor instead.
func (*TransactionSendRequest) Descriptor() ([]byte, []int) {
	return file_services_construct_proto_rawDescGZIP(), []int{6}
}

func (x *TransactionSendRequest) GetChainId() *proto.ChainId {
	if x != nil {
		return x.ChainId
	}
	return nil
}

func (x *TransactionSendRequest) GetIntent() *TransactionIntent {
	if x != nil {
		return x.Intent
	}
	return nil
}

func (x *TransactionSendRequest) GetSignatures() [][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type SignedTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Intent     *TransactionIntent `protobuf:"bytes,1,opt,name=intent,proto3" json:"intent,omitempty"`
	Signatures [][]byte           `protobuf:"bytes,2,rep,name=signatures,proto3" json:"signatures,omitempty"`
}

func (x *SignedTransaction) Reset() {
	*x = SignedTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_construct_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedTransaction) ProtoMessage() {}

func (x *SignedTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_services_construct_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedTransaction.ProtoReflect.Descriptor instead.
func (*SignedTransaction) Descriptor() ([]byte, []int) {
	return file_services_construct_proto_rawDescGZIP(), []int{7}
}

func (x *SignedTransaction) GetIntent() *TransactionIntent {
	if x != nil {
		return x.Intent
	}
	return nil
}

func (x *SignedTransaction) GetSignatures() [][]byte {
	if x != nil {
		return x.Signatures
	}
	return nil
}

type TransactionSendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TransactionSendResponse) Reset() {
	*x = TransactionSendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_construct_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionSendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionSendResponse) ProtoMessage() {}

func (x *TransactionSendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_construct_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionSendResponse.ProtoReflect.Descriptor instead.
func (*TransactionSendResponse) Descriptor() ([]byte, []int) {
	return file_services_construct_proto_rawDescGZIP(), []int{8}
}

func (x *TransactionSendResponse) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

var File_services_construct_proto protoreflect.FileDescriptor

var file_services_construct_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x75, 0x62, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x62, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x2b, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75,
	0x62, 0x74, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4f, 0x0a, 0x10, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x2b, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x75, 0x62, 0x74, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x62, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xc0, 0x01, 0x0a,
	0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x6f,
	0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x6f, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x31, 0x0a, 0x0d, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x62, 0x74, 0x2e, 0x75,
	0x69, 0x6e, 0x74, 0x32, 0x35, 0x36, 0x52, 0x0c, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x9d, 0x01, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x75, 0x62, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x62, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22,
	0x9b, 0x01, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75,
	0x62, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x62, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x9a, 0x01,
	0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x62, 0x74,
	0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x75, 0x62, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x11, 0x53, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x37, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x75, 0x62, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x69, 0x64, 0x32, 0xfc, 0x02, 0x0a, 0x13, 0x55, 0x62, 0x74, 0x43, 0x6f, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x0e, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x23, 0x2e,
	0x75, 0x62, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x62, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x5e, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x75, 0x62, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x62, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x75, 0x62, 0x74, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75,
	0x62, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a,
	0x04, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x24, 0x2e, 0x75, 0x62, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x75, 0x62,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x9e, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x75, 0x62, 0x74, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x62, 0x74, 0x72, 0x2f, 0x75, 0x62, 0x74, 0x2f, 0x67,
	0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0xa2, 0x02, 0x03, 0x55, 0x53, 0x58, 0xaa, 0x02, 0x0c, 0x55, 0x62, 0x74,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0xca, 0x02, 0x0c, 0x55, 0x62, 0x74, 0x5c,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0xe2, 0x02, 0x18, 0x55, 0x62, 0x74, 0x5c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x55, 0x62, 0x74, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_construct_proto_rawDescOnce sync.Once
	file_services_construct_proto_rawDescData = file_services_construct_proto_rawDesc
)

func file_services_construct_proto_rawDescGZIP() []byte {
	file_services_construct_proto_rawDescOnce.Do(func() {
		file_services_construct_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_construct_proto_rawDescData)
	})
	return file_services_construct_proto_rawDescData
}

var file_services_construct_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_services_construct_proto_goTypes = []interface{}{
	(*CreateTransferRequest)(nil),      // 0: ubt.services.CreateTransferRequest
	(*TransferReceiver)(nil),           // 1: ubt.services.TransferReceiver
	(*CreateBatchTransferRequest)(nil), // 2: ubt.services.CreateBatchTransferRequest
	(*TransactionIntent)(nil),          // 3: ubt.services.TransactionIntent
	(*TransactionCombineRequest)(nil),  // 4: ubt.services.TransactionCombineRequest
	(*TransactionSignRequest)(nil),     // 5: ubt.services.TransactionSignRequest
	(*TransactionSendRequest)(nil),     // 6: ubt.services.TransactionSendRequest
	(*SignedTransaction)(nil),          // 7: ubt.services.SignedTransaction
	(*TransactionSendResponse)(nil),    // 8: ubt.services.TransactionSendResponse
	(*proto.ChainId)(nil),              // 9: ubt.ChainId
	(*proto.CurrencyAmount)(nil),       // 10: ubt.CurrencyAmount
	(*proto.Uint256)(nil),              // 11: ubt.uint256
}
var file_services_construct_proto_depIdxs = []int32{
	9,  // 0: ubt.services.CreateTransferRequest.chain_id:type_name -> ubt.ChainId
	10, // 1: ubt.services.CreateTransferRequest.amount:type_name -> ubt.CurrencyAmount
	10, // 2: ubt.services.TransferReceiver.amount:type_name -> ubt.CurrencyAmount
	1,  // 3: ubt.services.CreateBatchTransferRequest.to:type_name -> ubt.services.TransferReceiver
	11, // 4: ubt.services.TransactionIntent.estimated_fee:type_name -> ubt.uint256
	9,  // 5: ubt.services.TransactionCombineRequest.chain_id:type_name -> ubt.ChainId
	3,  // 6: ubt.services.TransactionCombineRequest.intent:type_name -> ubt.services.TransactionIntent
	9,  // 7: ubt.services.TransactionSignRequest.chain_id:type_name -> ubt.ChainId
	3,  // 8: ubt.services.TransactionSignRequest.intent:type_name -> ubt.services.TransactionIntent
	9,  // 9: ubt.services.TransactionSendRequest.chain_id:type_name -> ubt.ChainId
	3,  // 10: ubt.services.TransactionSendRequest.intent:type_name -> ubt.services.TransactionIntent
	3,  // 11: ubt.services.SignedTransaction.intent:type_name -> ubt.services.TransactionIntent
	0,  // 12: ubt.services.UbtConstructService.createTransfer:input_type -> ubt.services.CreateTransferRequest
	4,  // 13: ubt.services.UbtConstructService.combineTransaction:input_type -> ubt.services.TransactionCombineRequest
	5,  // 14: ubt.services.UbtConstructService.signTransaction:input_type -> ubt.services.TransactionSignRequest
	6,  // 15: ubt.services.UbtConstructService.send:input_type -> ubt.services.TransactionSendRequest
	3,  // 16: ubt.services.UbtConstructService.createTransfer:output_type -> ubt.services.TransactionIntent
	7,  // 17: ubt.services.UbtConstructService.combineTransaction:output_type -> ubt.services.SignedTransaction
	7,  // 18: ubt.services.UbtConstructService.signTransaction:output_type -> ubt.services.SignedTransaction
	8,  // 19: ubt.services.UbtConstructService.send:output_type -> ubt.services.TransactionSendResponse
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_services_construct_proto_init() }
func file_services_construct_proto_init() {
	if File_services_construct_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_construct_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_construct_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferReceiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_construct_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBatchTransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_construct_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionIntent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_construct_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionCombineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_construct_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionSignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_construct_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_construct_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_construct_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionSendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_construct_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_construct_proto_goTypes,
		DependencyIndexes: file_services_construct_proto_depIdxs,
		MessageInfos:      file_services_construct_proto_msgTypes,
	}.Build()
	File_services_construct_proto = out.File
	file_services_construct_proto_rawDesc = nil
	file_services_construct_proto_goTypes = nil
	file_services_construct_proto_depIdxs = nil
}
